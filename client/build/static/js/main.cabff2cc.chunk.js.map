{"version":3,"sources":["component/header/SideBar.jsx","component/add/Add.jsx","component/bets/Bets.jsx","App.js","reportWebVitals.js","index.js"],"names":["SideBar","axios","require","empty","id","document","getElementById","value","Add","formik","useFormik","initialValues","name","date","bet","onSubmit","values","method","url","data","then","response","console","log","catch","error","resetForm","handleSubmit","onChange","handleChange","type","defaultValue","onClick","Bets","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"6RAYeA,MATf,WACI,OACI,mCACQ,8CACA,oD,gBCJVC,EAAQC,EAAQ,IAItB,SAASC,EAAMC,GACXC,SAASC,eAAeF,GAAIG,MAAM,GA2CvBC,MAxCf,WACI,IAAMC,EAASC,YAAU,CACrBC,cAAe,CACbC,KAAM,2BACNC,KAAM,GACNC,IAAK,kCAGPC,SAAU,SAACC,GACTf,EAAM,CACFgB,OAAO,OACPC,IAAI,6BACJC,KAAKH,IACNI,MAAK,SAAUC,GAChBC,QAAQC,IAAIF,MACXG,OAAM,SAAUC,GACjBH,QAAQC,IAAIE,MAEdhB,EAAOiB,eAIb,OACI,gCAEI,8DAEA,uBAAOX,SAAUN,EAAOkB,aAAxB,UACK,uBAAOvB,GAAG,QAAQQ,KAAK,OAAOgB,SAAUnB,EAAOoB,aAActB,MAAOE,EAAOO,OAAOJ,KAAOkB,KAAK,OAAOC,aAAa,2BAAsBC,QAAS,kBAAI7B,EAAM,YAC3J,uBAAO2B,KAAK,OAAOlB,KAAK,OAAOgB,SAAUnB,EAAOoB,aAActB,MAAOE,EAAOO,OAAOH,KAAMkB,aAAa,oBACtG,uBAAO3B,GAAG,OAAOQ,KAAK,MAAMgB,SAAUnB,EAAOoB,aAActB,MAAOE,EAAOO,OAAOF,IAAMgB,KAAK,OAAOC,aAAa,iCAAuBC,QAAS,kBAAI7B,EAAM,WACzJ,uBAAO2B,KAAK,SAAUvB,MAAM,kC,yBCf9B0B,MAVf,WAEI,OACI,iCACI,2CACA,wBAAQD,QAAS,WAjBzB/B,IAAM,CACFgB,OAAO,MACPC,IAAI,+BACLE,MAAK,SAAUC,GACdC,QAAQC,IAAI,eACXC,OAAM,SAAUC,GACjBH,QAAQC,IAAIE,OAWR,yBCLGS,MAZf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,cAAC,EAAD,IACA,sBAAKA,UAAU,OAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,WCCOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFzC,SAASC,eAAe,SAM1B8B,M","file":"static/js/main.cabff2cc.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./sidebar.css\";\r\n\r\nfunction SideBar(){\r\n    return ( \r\n        <header>\r\n                <h1>Bet Tracking</h1>\r\n                <h3>Page d'accueil</h3>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default SideBar ; ","import React from \"react\";\r\nimport \"./add.css\";\r\nimport { useFormik } from 'formik';\r\nconst axios = require('axios');\r\n\r\n\r\n\r\nfunction empty(id){\r\n    document.getElementById(id).value='';\r\n}\r\n\r\nfunction Add(){\r\n    const formik = useFormik({\r\n        initialValues: {\r\n          name: 'Quel match chef ? âš½',\r\n          date: '',\r\n          bet: 'Tu mets combien ? ðŸ’¸',\r\n        },\r\n   \r\n        onSubmit: (values) => {\r\n          axios({\r\n              method:'post',\r\n              url:'http://localhost:8080/test',\r\n              data:values\r\n          }).then(function (response) {\r\n            console.log(response);\r\n          }).catch(function (error) {\r\n            console.log(error);\r\n          });\r\n          formik.resetForm()\r\n        }\r\n      });\r\n\r\n    return ( \r\n        <add>\r\n            \r\n            <h2>Ajoute ton pari ðŸ’ª</h2>    \r\n\r\n            <form  onSubmit={formik.handleSubmit}  >\r\n                 <input id=\"match\" name=\"name\" onChange={formik.handleChange} value={formik.values.name}  type=\"text\" defaultValue=\"Quel match chef ? âš½\" onClick={()=>empty('match')} />\r\n                 <input type=\"date\" name=\"date\" onChange={formik.handleChange} value={formik.values.date} defaultValue=\"Date du match ?\"/>\r\n                 <input id=\"mise\" name=\"bet\" onChange={formik.handleChange} value={formik.values.bet}  type=\"text\" defaultValue=\"Tu mets combien ? ðŸ’¸\" onClick={()=>empty('mise')}/>\r\n                 <input type=\"submit\"  value=\"Boom !!! ðŸ’£ \"/>\r\n            </form> \r\n\r\n        </add>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Add ; ","import React from \"react\";\r\nimport \"./bets.css\";\r\nimport axios from 'axios';\r\n\r\nfunction display(){\r\n    axios({\r\n        method:\"get\",\r\n        url:\"http://localhost:8080/disp\"      \r\n    }).then(function (response) {\r\n        console.log('tout bon');\r\n      }).catch(function (error) {\r\n        console.log(error);\r\n      });\r\n        \r\n\r\n}\r\n\r\nfunction Bets(){\r\n\r\n    return ( \r\n        <bets>\r\n            <h1>Mes paris</h1>\r\n            <button onClick={()=>display()}>Refresh</button>\r\n        </bets>\r\n    )\r\n}\r\n\r\nexport default Bets ; ","import './App.css';\nimport SideBar from \"./component/header/SideBar\"\nimport Add from \"./component/add/Add\"\nimport Bets from \"./component/bets/Bets\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SideBar/> \n      <div className=\"Body\">\n        <Add/>\n        <Bets/>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}